apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt' // keep here and in this order or Dagger will screw up

/**
 *
 * Overwrite master with some_branch
 *
 git checkout some_branch
 git merge -s ours master
 git checkout master
 git merge some_branch
 *
 */
android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "cleanarcpro.brightowusu.com.cleanarcproj"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        // To avoid: DuplicateFileException: Duplicate files copied in APK META-INF/rxjava.properties
        // This exclude must be kept at in this module gradle file rather than the cryptoCompareEntity layer
        // module. This is due to the build order?
        exclude 'META-INF/rxjava.properties'
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':domain')
    // unfortunately, we cannot create a separate di module that would ideally point to
    // presentation layer as a dependency. This di module would be then able to provide all dependencies
    // to presentation, domain and data. As an Android workaround we point the presentation layer to the
    // data layer so that dependicies can be provided
    implementation project(':data')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Dagger for DI
    implementation "com.google.dagger:dagger:2.16"
    annotationProcessor "com.google.dagger:dagger-compiler:2.16"

    implementation 'com.google.dagger:dagger-android:2.16'
    implementation 'com.google.dagger:dagger-android-support:2.16' // if you use the support libraries
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.16'

    kapt "com.google.dagger:dagger-compiler:2.16"
    kapt "com.google.dagger:dagger-android-processor:2.16"

    // RX 2
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    //implementation 'io.reactivex:rxandroid:1.2.1' // extensions schedulers etc
    //implementation 'com.netflix.rxjava:rxjava-android:0.17.0'

    // https://github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.6.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    implementation "android.arch.lifecycle:extensions:1.1.1"
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
}
